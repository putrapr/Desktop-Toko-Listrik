package main;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import utility.HorizontalAlignmentHeaderRenderer;
import utility.Koneksi_db;

/**
 * @author Putra Prasetya
 */
public class Pembelian extends javax.swing.JFrame {
    private Connection conn = new Koneksi_db().connect();
    private DefaultTableModel tabmode;
    private String[] arr_id_brg = new String[50];
    private String[] arr_nama = new String[50];
    private String[] arr_satuan = new String[50];
    private String[] arr_harga_beli = new String[50];
    private String[] arr_kuantitas = new String[50];
    private String[] arr_sub_jumlah = new String[50];
    
    public Pembelian() {
        initComponents();
    }
    
    public Pembelian(Rectangle bound) {
        initComponents();
        dapatkanNamaBarang();
        dapatkanTglSekarang();
        dapatkanPemasok();
        dapatkanTemplat();
        aturKolomTbl();
        
        // terima ukuran window & tetapkan di window yang aktif
        this.setBounds(bound);
        
        //saat restore dari kondisi maximize kembali ke ukuran minimal
        Dimension size = this.getSize();
        Double width = size.getWidth();
        Double height = size.getHeight();
        if (width > 1381 && height > 743) {
            this.setSize(800,500);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg21 = new utility.bg2();
        jLabel15 = new javax.swing.JLabel();
        btn_ubah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_pembelian = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        tf_faktur = new javax.swing.JTextField();
        lb_pemasok = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tf_ppn = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lb_jumlah = new javax.swing.JLabel();
        btn_simpan = new javax.swing.JButton();
        lb_tgl_sekarang = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cb_nama = new javax.swing.JComboBox<>();
        lb_id_beli = new javax.swing.JLabel();
        lb_satuan = new javax.swing.JLabel();
        tf_harga = new javax.swing.JTextField();
        tf_kuantitas = new javax.swing.JTextField();
        lb_sub_jumlah = new javax.swing.JLabel();
        btn_tambah = new javax.swing.JButton();
        btn_templat = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cb_pemasok = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btn_kembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setSize(new java.awt.Dimension(800, 500));

        bg21.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        bg21.setMinimumSize(new java.awt.Dimension(800, 500));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Tanggal");

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        tbl_pembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Barang", "Nama Barang", "Kuantitas", "Satuan", "Harga Beli", "Sub Jumlah"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_pembelian.getTableHeader().setReorderingAllowed(false);
        tbl_pembelian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_pembelianMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_pembelian);
        if (tbl_pembelian.getColumnModel().getColumnCount() > 0) {
            tbl_pembelian.getColumnModel().getColumn(0).setMinWidth(70);
            tbl_pembelian.getColumnModel().getColumn(0).setMaxWidth(70);
            tbl_pembelian.getColumnModel().getColumn(1).setMinWidth(200);
            tbl_pembelian.getColumnModel().getColumn(2).setMinWidth(70);
            tbl_pembelian.getColumnModel().getColumn(2).setMaxWidth(70);
            tbl_pembelian.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbl_pembelian.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Faktur");

        lb_pemasok.setForeground(new java.awt.Color(255, 255, 255));
        lb_pemasok.setText("Pemasok");

        jLabel1.setText("PPN :  Rp.");

        tf_ppn.setText("0");
        tf_ppn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_ppnKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_ppnKeyTyped(evt);
            }
        });

        jLabel2.setText("Jumlah :  Rp.");

        lb_jumlah.setText("0");

        btn_simpan.setBackground(new java.awt.Color(255, 0, 0));
        btn_simpan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_simpan.setForeground(new java.awt.Color(255, 255, 255));
        btn_simpan.setText("SIMPAN SEMUA");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        lb_tgl_sekarang.setForeground(new java.awt.Color(255, 255, 255));
        lb_tgl_sekarang.setText("___");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("INPUT");

        jLabel7.setText("ID Barang");

        jLabel8.setText("Nama Barang");

        jLabel10.setText("Harga Beli");

        jLabel11.setText("Kuantitas");

        jLabel12.setText("Sub Jumlah");

        cb_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_namaActionPerformed(evt);
            }
        });

        lb_id_beli.setText("...");

        lb_satuan.setText("...");

        tf_harga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_hargaFocusLost(evt);
            }
        });
        tf_harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_hargaKeyTyped(evt);
            }
        });

        tf_kuantitas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tf_kuantitas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_kuantitasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_kuantitasKeyTyped(evt);
            }
        });

        lb_sub_jumlah.setText("0");

        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_templat.setText("Templat");
        btn_templat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_templatActionPerformed(evt);
            }
        });

        jLabel5.setText("Rp.");

        jLabel6.setText("Rp.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_nama, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lb_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lb_id_beli, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(btn_templat)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6)
                        .addGap(2, 2, 2)
                        .addComponent(tf_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(lb_sub_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_tambah)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lb_id_beli)
                    .addComponent(btn_templat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tf_harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(lb_satuan))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lb_sub_jumlah)
                    .addComponent(jLabel5)
                    .addComponent(btn_tambah)))
        );

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pembelian");

        btn_kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_kembali.setText("<< Kembali");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bg21Layout = new javax.swing.GroupLayout(bg21);
        bg21.setLayout(bg21Layout);
        bg21Layout.setHorizontalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bg21Layout.createSequentialGroup()
                        .addComponent(btn_kembali)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(tf_ppn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(lb_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lb_pemasok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_faktur, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                    .addComponent(lb_tgl_sekarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_pemasok, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(18, 18, 18))
        );
        bg21Layout.setVerticalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(lb_tgl_sekarang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_faktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(10, 10, 10)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_pemasok)
                            .addComponent(cb_pemasok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ubah)
                            .addComponent(btn_hapus)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_ppn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lb_jumlah)
                    .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_kembali))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void pesanPopUp(String pesan){
        JOptionPane.showMessageDialog(null, pesan);
    }
    
    private void pesanSQLPopUp(String pesan, SQLException ee){
        JOptionPane.showMessageDialog(null, pesan+" : "+ee);
    }
    
    private void dapatkanNamaBarang(){
        String query = "SELECT nama_tp FROM templat WHERE status_tp = 'Aktif'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            while (hasil.next()) cb_nama.addItem(hasil.getString("nama_tp")); 
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan nama barang",e);
        }
    }
    
    private void dapatkanTglSekarang(){
        SimpleDateFormat formatting = new SimpleDateFormat("dd-MM-yyyy");
        String strDate = formatting.format(new Date());
        lb_tgl_sekarang.setText(strDate);
    }
    
    private void dapatkanPemasok(){
        String query = "SELECT nama_pms FROM pemasok";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);                                               
            while (hasil.next()) cb_pemasok.addItem(hasil.getString("nama_pms")); 
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan daftar pemasok",e);
        }
    }
    
    private void cb_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_namaActionPerformed
        dapatkanTemplat();
    }//GEN-LAST:event_cb_namaActionPerformed

    private void dapatkanTemplat(){
        String nama = cb_nama.getSelectedItem().toString(); 
        String query = "SELECT * FROM templat WHERE nama_tp = '"+nama+"'";        
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query); 
            while (hasil.next()){
                String id = hasil.getString("id_tp");
                String satuan = hasil.getString("satuan_tp");
                String harga = hasil.getString("harga_beli_tp");                
                lb_id_beli.setText(id);
                lb_satuan.setText(satuan);
                tf_harga.setText(harga);
                tf_kuantitas.setText("");
                lb_sub_jumlah.setText("0");
                tf_kuantitas.setText("1");
                lb_sub_jumlah.setText(harga);
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mendapatkan id",e);
        }
    }
    
    private void tf_hargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_hargaKeyTyped
        char masukan = evt.getKeyChar();
        if (!(Character.isDigit(masukan))) evt.consume();
    }//GEN-LAST:event_tf_hargaKeyTyped

    private void tf_hargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_hargaFocusLost
        String id_beli = lb_id_beli.getText();
        int harga_baru = Integer.valueOf(tf_harga.getText());
        int kuantitas = Integer.valueOf(tf_kuantitas.getText());
        String query = "SELECT harga_beli_tp FROM templat WHERE id_tp = '"+id_beli+"'";
        try {     
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()){
                int harga_lama = hasil.getInt("harga_beli_tp");
                if (harga_lama != harga_baru){
                    int ok = JOptionPane.showConfirmDialog(null,
                            "Ubah harga beli dari "+harga_lama+" menjadi "+harga_baru+" ?",
                            "Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
                    if (ok==1) { // Jika pilih "Tidak"                       
                        tf_harga.setText(""+harga_lama);
                        lb_sub_jumlah.setText(""+(harga_lama * kuantitas));
                    } else { // Jika pilih "Ya"
                        lb_sub_jumlah.setText(""+(harga_baru * kuantitas));
                        perbaruiHargaTemplat(harga_baru, id_beli);
                    }
                }
            }            
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan harga lama",e);
        }
    }//GEN-LAST:event_tf_hargaFocusLost

    private void perbaruiHargaTemplat(int pharga_beli_tp, String pid_tp){
        String query = "UPDATE templat SET harga_beli_tp=? WHERE id_tp=?";        
        try {            
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, pharga_beli_tp);
            stat.setString(2, pid_tp);
            stat.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data Gagal Diubah "+e);
        }
    }
    
    private void tf_kuantitasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_kuantitasKeyTyped
        char masukan = evt.getKeyChar();
        if(!(Character.isDigit(masukan))) evt.consume();
    }//GEN-LAST:event_tf_kuantitasKeyTyped

    private void tf_kuantitasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_kuantitasKeyReleased
        String kuantitas = tf_kuantitas.getText();
        if (kuantitas.equals("")) lb_sub_jumlah.setText("0");
        else {
            int harga_beli = Integer.valueOf(tf_harga.getText());
            int num_kuantitas = Integer.valueOf(kuantitas);
            lb_sub_jumlah.setText(""+(harga_beli * num_kuantitas));
        }
    }//GEN-LAST:event_tf_kuantitasKeyReleased

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        String id = lb_id_beli.getText();
        String nama = cb_nama.getSelectedItem().toString();
        int jml_baris = tbl_pembelian.getRowCount();
        arr_id_brg[jml_baris] = id;
        if (jml_baris >= 50) pesanPopUp("Maksimal 50 data dalam satu transaksi ! \n[Simpan Semua] terlebih dahulu.");
        else if (tf_kuantitas.getText().equals("")) pesanPopUp("Kuantitas kosong ! \nIsi kuantitas terlebih dahulu.");
        else if (tf_harga.getText().equals("")) pesanPopUp("Harga beli kosong ! \nIsi harga beli terlebih dahulu.");
        else {
            for (int i = 0; i < jml_baris;i++) {
                if (id.equals(arr_id_brg[i])) {
                    pesanPopUp("' "+nama+" ' sudah ada ! \nSilahkan ubah data");
                    return;
                }                
            }
            
            arr_nama[jml_baris] = nama;
            arr_satuan[jml_baris] = lb_satuan.getText();
            arr_harga_beli[jml_baris] = tf_harga.getText();
            arr_kuantitas[jml_baris] = tf_kuantitas.getText();
            arr_sub_jumlah[jml_baris] = lb_sub_jumlah.getText();
            
            Object[] Kolom = {"Id Barang", "Nama Barang", "Kuantitas", "Satuan", "Harga Beli", "Sub Jumlah"};
            tabmode = new DefaultTableModel(null, Kolom);
            tbl_pembelian.setModel(tabmode);
            aturKolomTbl();
            String[] data = new String[1];

            for (int i = 0; i < jml_baris+1; i++){
                data = new String[] {arr_id_brg[i], arr_nama[i], arr_kuantitas[i], arr_satuan[i], arr_harga_beli[i], arr_sub_jumlah[i]};
                tabmode.addRow(data);
            }
            dapatkanJumlah();
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void aturKolomTbl(){
        tbl_pembelian.getColumn("Id Barang").setMinWidth(65);
        tbl_pembelian.getColumn("Id Barang").setMaxWidth(65);
        tbl_pembelian.getColumn("Nama Barang").setMinWidth(250);
        tbl_pembelian.getColumn("Kuantitas").setMinWidth(65);
        tbl_pembelian.getColumn("Kuantitas").setMaxWidth(65);        
        tbl_pembelian.getColumn("Satuan").setMinWidth(80);
        tbl_pembelian.getColumn("Satuan").setMaxWidth(80);
        
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        tbl_pembelian.getColumn("Kuantitas").setCellRenderer(rightRenderer);
        tbl_pembelian.getColumn("Harga Beli").setCellRenderer(rightRenderer);
        tbl_pembelian.getColumn("Sub Jumlah").setCellRenderer(rightRenderer);
        
        tbl_pembelian.getColumn("Harga Beli").setHeaderRenderer(
            new HorizontalAlignmentHeaderRenderer(SwingConstants.RIGHT));
        tbl_pembelian.getColumn("Sub Jumlah").setHeaderRenderer(
            new HorizontalAlignmentHeaderRenderer(SwingConstants.RIGHT));
        tbl_pembelian.getColumn("Nama Barang").setHeaderRenderer(
            new HorizontalAlignmentHeaderRenderer(SwingConstants.LEFT));
        tbl_pembelian.getColumn("Satuan").setHeaderRenderer(
            new HorizontalAlignmentHeaderRenderer(SwingConstants.LEFT));
    }
    
    private void dapatkanJumlah(){
        String str_ppn = tf_ppn.getText();
        int jml_baris = tbl_pembelian.getRowCount();
        if (arr_sub_jumlah[0] != null) {
            int hasil = 0, ppn = 0;
            for (int i = 0; i<jml_baris ;i++) hasil += Integer.valueOf(arr_sub_jumlah[i]);            
            if (!str_ppn.equals("")) ppn = Integer.valueOf(str_ppn);            
            hasil+=ppn;
            lb_jumlah.setText(""+hasil);
        } else {
            lb_jumlah.setText(str_ppn);
        }
    }
    
    private void btn_templatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_templatActionPerformed
        Rectangle bound = this.getBounds();
        new Templat(bound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_templatActionPerformed

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        Rectangle bound = this.getBounds();
        new Menu(bound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        int baris = tbl_pembelian.getSelectedRow();
        if (baris == -1) {
            pesanPopUp("Pilih salah satu baris dalam tabel pembelian terlebih dahulu");
            return;
        }
        int jml_baris = tbl_pembelian.getRowCount();        
        arr_harga_beli[baris] = tf_harga.getText();
        arr_kuantitas[baris] = tf_kuantitas.getText();
        arr_sub_jumlah[baris] = lb_sub_jumlah.getText();
        
        Object[] Kolom = {"Id Barang", "Nama Barang", "Kuantitas", "Satuan", "Harga Beli", "Sub Jumlah"};
        tabmode = new DefaultTableModel(null, Kolom);
        tbl_pembelian.setModel(tabmode);
        aturKolomTbl();
        String[] data = new String[1];
        
        for (int i=0; i<jml_baris+1; i++) {
            data = new String[] {arr_id_brg[i], arr_nama[i], arr_kuantitas[i], arr_satuan[i], arr_harga_beli[i], arr_sub_jumlah[i]};
            tabmode.addRow(data);
        }        
        tabmode.removeRow(jml_baris);
        dapatkanJumlah();
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void tbl_pembelianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_pembelianMouseClicked
        int bar = tbl_pembelian.getSelectedRow();
        String nama = tabmode.getValueAt(bar, 1).toString();
        String kuantitas = tabmode.getValueAt(bar, 2).toString();
        String sub_jumlah = tabmode.getValueAt(bar, 5).toString();
        cb_nama.setSelectedItem(nama);
        tf_kuantitas.setText(kuantitas);
        lb_sub_jumlah.setText(sub_jumlah);
    }//GEN-LAST:event_tbl_pembelianMouseClicked

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int bar = tbl_pembelian.getSelectedRow();
        int ok = JOptionPane.showConfirmDialog(null,"Hapus","Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
        if (ok==0) {
            tabmode.removeRow(bar);
            dapatkanJumlah();
        }        
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void tf_ppnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ppnKeyTyped
        char masukan = evt.getKeyChar();
        if (!(Character.isDigit(masukan))) evt.consume();
    }//GEN-LAST:event_tf_ppnKeyTyped

    private void tf_ppnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ppnKeyReleased
        dapatkanJumlah();
    }//GEN-LAST:event_tf_ppnKeyReleased

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        // 1. ambil: tgl, faktur, id_pms, ppn, jumlah, jml_baris_tbl
        String tgl = lb_tgl_sekarang.getText();
        tgl = formatTgl(tgl);
        String faktur = tf_faktur.getText();
        String nama_pms = cb_pemasok.getSelectedItem().toString();         
        int id_pms = dapatkanIdPms(nama_pms), ppn = 0;
        String str_ppn = tf_ppn.getText();
        if (!str_ppn.equals("")) ppn = Integer.valueOf(str_ppn);
        int jumlah = Integer.valueOf(lb_jumlah.getText());
        int jml_baris = tbl_pembelian.getRowCount();        
        
        // 2. cek masukan faktur dan jml_baris_tbl
        if (faktur.equals("")) pesanPopUp("Faktur kosong ! \nIsi Faktur terlebih dahulu");
        else if (jml_baris == 0) pesanPopUp("Tabel kosong ! \nIsi Tabel terlebih dahulu");
        else if (adaNoFaktur(faktur)) pesanPopUp("Faktur sudah ada ! \n");
        else {         
            // 3. Sisipkan data ke DB tbl_pembelian
            sisipkanPembelian(faktur, id_pms, ppn, jumlah, tgl);
            
            // 4. Sisipkan data ke DB tbl_pembelian_detail
            sisipkanPembelianDetail(faktur, jml_baris);
            
            // 5. Perbarui stok barang
            int kuantitas = 0, harga_beli = 0;
            
            String id_brg = "";
            for (int i = 0; i<jml_baris; i++){
                id_brg = arr_id_brg[i];
                harga_beli = Integer.valueOf(arr_harga_beli[i]);
                kuantitas = Integer.valueOf(arr_kuantitas[i]);                
                aturStok(faktur, id_brg, id_pms, harga_beli, kuantitas, tgl);
            }            
            bersihkanMasukan();
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private int dapatkanIdPms(String pnama){
        int id = 0;
        String query = "SELECT id_pms FROM pemasok WHERE nama_pms = '"+pnama+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);                                               
            if (hasil.next()) id = hasil.getInt("id_pms");
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan id pemasok",e);
        }
        return id;
    }

    private String formatTgl(String pdate){
        String tahun = pdate.substring(6,10);
        String bulan = pdate.substring(3,5);
        String tgl = pdate.substring(0,2);
        pdate = tahun+"-"+bulan+"-"+tgl;
        return pdate;
    }
    
    private boolean adaNoFaktur(String pfaktur){
        String db_faktur = "";
        String query = "SELECT faktur_beli FROM pembelian WHERE faktur_beli = '"+pfaktur+"'";
            try {
                Statement stat = conn.createStatement();
                ResultSet hasil = stat.executeQuery(query);
                if (hasil.next()) return true;
            } catch (SQLException e) {
                pesanSQLPopUp("Gagal mengambil faktur",e);
            }
        return false;
    }
    
    private void sisipkanPembelian(String pfaktur, int pid_pms, int pppn, int pjumlah, String ptgl){
        String query = "INSERT INTO pembelian VALUES (?,?,?,?,?)";
        try {
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setString(1, pfaktur);
            stat.setInt(2, pid_pms);
            stat.setInt(3, pppn);
            stat.setInt(4, pjumlah);
            stat.setString(5, ptgl);            
            stat.executeUpdate();
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal menambahkan data pembelian",e);
        }
    }
    
    private void sisipkanPembelianDetail(String pfaktur, int pjml_baris){
        String query = "INSERT INTO pembelian_detail VALUES (?,?,?,?)";        
        for (int i = 0; i < pjml_baris;i++){
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, pfaktur);
                stat.setString(2, arr_id_brg[i]);
                stat.setInt(3, Integer.valueOf(arr_kuantitas[i]));
                stat.setInt(4, Integer.valueOf(arr_sub_jumlah[i]));
                stat.executeUpdate();                    
            } catch (SQLException e) {
                pesanSQLPopUp("Gagal menambahkan data pembelian detail",e);
            }
        }
    }
    
    private void aturStok(String pfaktur, String pid_brg, int pid_pms, int pharga_beli, int pkuantitas, String ptgl){
        // 5.1 ambil data templat dari DB
        String id_tp = "", nama_tp = "", satuan_tp = "Buah";
        int konv_tp = 0, harga_jual_tp = 0;
        String query = "SELECT * FROM templat WHERE id_tp= '"+pid_brg+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()){
                id_tp = hasil.getString("id_tp");
                nama_tp = hasil.getString("nama_tp");
                konv_tp = hasil.getInt("konversi_tp");
                harga_jual_tp = hasil.getInt("harga_jual_tp");
            }
        } catch(SQLException e) {
            pesanSQLPopUp("Gagal mengambil data templat",e);
        }      
        
        // 5.2 ubah harga menjadi harga perbuah
        pkuantitas *= konv_tp;
        pharga_beli /= pkuantitas;
        harga_jual_tp /= pkuantitas;  
        
        if (adaIdBrg(pid_brg)){ // 5.3 Jika id_brg ADA perbarui stok
            perbaruiStok(id_tp, nama_tp, satuan_tp, pkuantitas, pharga_beli, harga_jual_tp, pid_pms, ptgl);
        } else { // 5.4 Jika id_brg TIDAK ADA tambah stok
            tambahStok(id_tp, nama_tp, satuan_tp, pkuantitas, pharga_beli, harga_jual_tp, pid_pms, ptgl);
        }
    }
    
    private boolean adaIdBrg(String id_brg){
        String query = "SELECT id_brg FROM barang WHERE id_brg = '"+id_brg+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return true;            
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mengambil id barang",e);
        }
        return false;
    }
    
    private void perbaruiStok(String pid_brg, String pnama, String psatuan, int pkuantitas, 
                              int pharga_beli, int pharga_jual, int pid_pms, String ptgl){
        String query = "SELECT kuantitas_brg FROM barang WHERE id_brg = '"+pid_brg+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) pkuantitas += hasil.getInt("kuantitas_brg");
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mengambil kuantitas barang",e);
        }
        
        query = "UPDATE barang SET id_pms_brg=?, nama_brg=?, satuan_brg=?, kuantitas_brg=?, "
                + "harga_beli_brg=?, harga_jual_brg=?, tgl_beli_brg=? WHERE id_brg=?";
        try {            
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, pid_pms);
            stat.setString(2, pnama);
            stat.setString(3, psatuan);
            stat.setInt(4, pkuantitas);
            stat.setInt(5, pharga_beli);
            stat.setInt(6, pharga_jual);
            stat.setString(7, ptgl);
            stat.setString(8, pid_brg);            
            stat.executeUpdate();
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal perbarui data barang",e);
        }
    }
    
    private void tambahStok(String pid_brg, String pnama, String psatuan, int pkuantitas, 
                              int pharga_beli, int pharga_jual, int pid_pms, String ptgl){
        String query = "INSERT INTO barang VALUES (?,?,?,?,?,?,?,?)";
        try {
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setString(1, pid_brg);
            stat.setInt(2, pid_pms);
            stat.setString(3, pnama);
            stat.setString(4, psatuan);
            stat.setInt(5, pkuantitas);
            stat.setInt(6, pharga_beli);
            stat.setInt(7, pharga_jual);
            stat.setString(8, ptgl);            
            stat.executeUpdate();
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal menambahkan data barang",e);
        }
    }
    
    private void bersihkanMasukan(){
        cb_nama.setSelectedIndex(0);
        cb_pemasok.setSelectedIndex(0);
        tf_faktur.setText("");
        tf_kuantitas.setText("");
        lb_sub_jumlah.setText("0");
        tf_ppn.setText("0");
        lb_jumlah.setText("0");
        Object[] Kolom = {"Id Barang", "Nama Barang", "Kuantitas", "Satuan", "Harga Beli", "Sub Jumlah"};
        tabmode = new DefaultTableModel(null, Kolom);
        tbl_pembelian.setModel(tabmode);
        aturKolomTbl();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pembelian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utility.bg2 bg21;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton btn_templat;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JComboBox<String> cb_nama;
    private javax.swing.JComboBox<String> cb_pemasok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lb_id_beli;
    private javax.swing.JLabel lb_jumlah;
    private javax.swing.JLabel lb_pemasok;
    private javax.swing.JLabel lb_satuan;
    private javax.swing.JLabel lb_sub_jumlah;
    private javax.swing.JLabel lb_tgl_sekarang;
    private javax.swing.JTable tbl_pembelian;
    private javax.swing.JTextField tf_faktur;
    private javax.swing.JTextField tf_harga;
    private javax.swing.JTextField tf_kuantitas;
    private javax.swing.JTextField tf_ppn;
    // End of variables declaration//GEN-END:variables
}
