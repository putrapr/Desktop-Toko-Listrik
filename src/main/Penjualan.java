package main;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import utility.Koneksi_db;

/**
 * @author Putra Prasetya
 */
public class Penjualan extends javax.swing.JFrame {
    private Connection conn = new Koneksi_db().connect();
    private DefaultTableModel tabmode;
    private DefaultTableModel tabmode2;
    private String nama_admin;
    private JTextField tf_kodeJual = new JTextField();
    private JTextField tf_singkatanAdm = new JTextField();
    private String[] arr_id_brg = new String[50];
    private String[] arr_nama = new String[50];
    private String[] arr_harga = new String[50];
    private String[] arr_kuantitas = new String[50];
    private String[] arr_sub_jumlah = new String[50];
    
    public Penjualan(){
        initComponents();
    }
    
    public Penjualan(Rectangle bound, String pnama_admin) {
        initComponents();
        dapatkanFaktur(pnama_admin);
        tabelBarang();
        dapatkanTgl();
        this.nama_admin = pnama_admin;
        myInitComponents();
        
        //lb_no_faktur.setText(""+id);
        this.setBounds(bound);
        
        // terima ukuran window & tetapkan di window yang aktif
        this.setBounds(bound);
               
        //saat restore dari kondisi maximize kembali ke ukuran minimal
        Dimension size = this.getSize();
        Double width = size.getWidth();
        Double height = size.getHeight();
        if (width > 1381 && height > 743) {
            this.setSize(800,500);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        }        
    }    								
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg21 = new utility.bg2();
        tf_pencarian = new javax.swing.JTextField();
        btn_cari = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_transaksi = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbl_barang = new javax.swing.JTable();
        btn_selesai = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        lb_faktur = new javax.swing.JLabel();
        btn_ubah = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lb_jumlah = new javax.swing.JLabel();
        lb_tgl = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btn_ubah_faktur = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lb_nama = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lb_id_brg = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lb_stok = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lb_harga = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tf_kuantitas = new javax.swing.JTextField();
        btn_tambah = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btn_kembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));

        bg21.setMinimumSize(new java.awt.Dimension(800, 450));

        btn_cari.setText("Cari");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Faktur :");

        tbl_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Barang", "Nama Barang", "Harga", "Kuantitas", "Sub Jumlah"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_transaksi.getTableHeader().setReorderingAllowed(false);
        tbl_transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_transaksiMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_transaksi);
        if (tbl_transaksi.getColumnModel().getColumnCount() > 0) {
            tbl_transaksi.getColumnModel().getColumn(0).setMinWidth(70);
            tbl_transaksi.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbl_transaksi.getColumnModel().getColumn(0).setMaxWidth(70);
            tbl_transaksi.getColumnModel().getColumn(2).setPreferredWidth(10);
            tbl_transaksi.getColumnModel().getColumn(3).setMinWidth(70);
            tbl_transaksi.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbl_transaksi.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        tbl_barang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id Barang", "Nama", "Stok", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_barang.getTableHeader().setReorderingAllowed(false);
        tbl_barang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_barangMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tbl_barang);
        if (tbl_barang.getColumnModel().getColumnCount() > 0) {
            tbl_barang.getColumnModel().getColumn(0).setMinWidth(70);
            tbl_barang.getColumnModel().getColumn(0).setMaxWidth(70);
            tbl_barang.getColumnModel().getColumn(2).setMinWidth(70);
            tbl_barang.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        btn_selesai.setBackground(new java.awt.Color(255, 0, 0));
        btn_selesai.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_selesai.setForeground(new java.awt.Color(255, 255, 255));
        btn_selesai.setText("SELESAI");
        btn_selesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selesaiActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        lb_faktur.setForeground(new java.awt.Color(255, 255, 255));
        lb_faktur.setText("___");

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Jumlah :");

        lb_jumlah.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_jumlah.setText("0");

        lb_tgl.setForeground(new java.awt.Color(255, 255, 255));
        lb_tgl.setText("01-01-0101");

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Tanggal :");

        btn_ubah_faktur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_transfer_11px.png"))); // NOI18N
        btn_ubah_faktur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubah_fakturActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Penjualan");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Id         :");

        lb_nama.setForeground(new java.awt.Color(255, 255, 255));
        lb_nama.setText("...");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nama :");

        lb_id_brg.setForeground(new java.awt.Color(255, 255, 255));
        lb_id_brg.setText("...");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Stok :");

        lb_stok.setForeground(new java.awt.Color(255, 255, 255));
        lb_stok.setText("...");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Harga :");

        lb_harga.setForeground(new java.awt.Color(255, 255, 255));
        lb_harga.setText("0");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Kuantitas :");

        tf_kuantitas.setText("0");

        btn_tambah.setText("Tambah");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buah");

        btn_kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_kembali.setText("<< Kembali");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bg21Layout = new javax.swing.GroupLayout(bg21);
        bg21.setLayout(bg21Layout);
        bg21Layout.setHorizontalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(tf_pencarian)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_cari)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_reset))
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lb_id_brg, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lb_stok, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bg21Layout.createSequentialGroup()
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel10))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lb_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bg21Layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_tambah)))
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(btn_kembali)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lb_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_selesai, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addComponent(btn_ubah_faktur, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_faktur, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_tgl)
                        .addGap(113, 113, 113))))
        );
        bg21Layout.setVerticalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari)
                    .addComponent(btn_reset)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_id_brg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_stok, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btn_tambah))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGap(0, 144, Short.MAX_VALUE)
                        .addComponent(btn_ubah)
                        .addGap(18, 18, 18)
                        .addComponent(btn_hapus)
                        .addGap(18, 18, 18)
                        .addComponent(btn_selesai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_faktur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lb_tgl)
                                .addComponent(jLabel17))
                            .addComponent(btn_ubah_faktur))
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_kembali)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(lb_jumlah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(1, 1, 1))))
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesanPopUp(String pesan){
        JOptionPane.showMessageDialog(null, pesan);
    }
    
    private void pesanSQLPopUp(String pesan, SQLException ee){
        JOptionPane.showMessageDialog(null, pesan+" : "+ee);
    }
    
    private void dapatkanFaktur(String pnama_admin){
        // Dapatkan kode & singkatan
        String kode = "", singkatan = "";
        String query = "SELECT * FROM admin WHERE nama_admin = '"+pnama_admin+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()){
                kode = hasil.getString("kode_penjualan");
                singkatan = hasil.getString("singkatan_admin");
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil kode dan singkatan",e);
        }

        // Dapatkan tgl sekarang
        Date date = new Date();
        SimpleDateFormat formatting = new SimpleDateFormat("MM");
        SimpleDateFormat formatting2 = new SimpleDateFormat("yyyy");
        String bulan = formatting.format(date);
        String tahun = formatting2.format(date);

        // Dapatkan jumlah penjualan perbulan
        int jml = 0;
        query = "SELECT COUNT(faktur_jual) FROM penjualan WHERE MONTH(tgl_jual) = '"+bulan+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) jml = hasil.getInt("COUNT(faktur_jual)");    
            jml++;
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mengambil jumlah penjulan perbulan",e);
        }
        
        // Susun faktur
        String str_jml = String.format("%04d", jml);
        bulan = String.format("%02d", Integer.valueOf(bulan));
        tahun = tahun.substring(2,4);
        String faktur = kode + str_jml + "/" + bulan + "/" + tahun + "-" + singkatan;
        lb_faktur.setText(faktur);
    }
       
    private void tabelBarang(){
        Object[] Baris = {"Id Barang", "Nama", "Stok", "Harga"};
        tabmode = new DefaultTableModel(null, Baris);
        tbl_barang.setModel(tabmode);
        String query = "SELECT * FROM barang" ;
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            while (hasil.next()) {
                String id = hasil.getString("id_brg"); 
                String nama = hasil.getString("nama_brg");
                String kuant = hasil.getString("kuantitas_brg");                
                String harga = hasil.getString("harga_jual_brg");                
                String[] data = {id,nama,kuant,harga};
                tabmode.addRow(data); 
            }
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal menampilkan data barang",e);
        }
    }
    
    private void tbl_barangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_barangMouseClicked
        int bar = tbl_barang.getSelectedRow();
        String id = tabmode.getValueAt(bar, 0).toString();
        String nama = tabmode.getValueAt(bar, 1).toString();
        String stok = tabmode.getValueAt(bar, 2).toString();
        String harga = tabmode.getValueAt(bar, 3).toString();
        
        lb_id_brg.setText(id);
        lb_nama.setText(nama);
        lb_stok.setText(stok);
        lb_harga.setText(harga);
        tf_kuantitas.setText("0");
    }//GEN-LAST:event_tbl_barangMouseClicked

    private void dapatkanTgl(){
        Date tgl = new Date();
        SimpleDateFormat formatting = new SimpleDateFormat("dd-MM-yyyy");
        String str_tgl = formatting.format(tgl);
        lb_tgl.setText(str_tgl);
    }
    
    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
        Object[] Baris = {"Id Barang", "Nama", "Stok", "Harga"};
        tabmode = new DefaultTableModel(null, Baris);
        tbl_barang.setModel(tabmode);
        String cari = tf_pencarian.getText();
        String query = "SELECT * FROM barang WHERE id_brg LIKE '%"+cari+"%' "
                        + "OR nama_brg LIKE '%"+cari+"%' "
                        + "OR kuantitas_brg LIKE '%"+cari+"%' "
                        + "OR harga_jual_brg LIKE '%"+cari+"%'";        
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            while (hasil.next()){
                String id = hasil.getString("id_brg");
                String nama = hasil.getString("nama_brg");
                String kuantitas = hasil.getString("kuantitas_brg");
                String harga = hasil.getString("harga_jual_brg");               
                String[] data = {id,nama,kuantitas,harga};
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal menampilkan hasil pencarian",e);
        }
    }//GEN-LAST:event_btn_cariActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        tabelBarang();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        int maks = tbl_transaksi.getRowCount();
        arr_id_brg[maks] = lb_id_brg.getText();
        arr_nama[maks] = lb_nama.getText();
        arr_harga[maks] = lb_harga.getText();
        arr_kuantitas[maks] = tf_kuantitas.getText();
        if (arr_kuantitas[maks].equals("")) pesanPopUp("Kuantitas kosong ! \nIsi terlebih dahulu.");
        else if (arr_kuantitas[maks].equals("0")) pesanPopUp("Kuantitas = 0 ! \nIsi terlebih dahulu.");
        else if (arr_id_brg[maks].equals("...")) pesanPopUp("Barang belum dipilih ! \nPilih barang terlebih dahulu.");
        else {
            arr_sub_jumlah[maks] = perkalianStr(arr_harga[maks],arr_kuantitas[maks]);
            Object[] Kolom = {"Id Barang", "Nama Barang", "Harga", "Kuantitas", "Jumlah"};
            tabmode2 = new DefaultTableModel(null, Kolom);
            if (maks >= 50) pesanPopUp("Maksimal 50 data dalam satu transaksi ! \nKlik tombol \"Selesai\" terlebih dahulu.");
            else if (maks == 0) { // Saat data kosong (tabel penjualan).                
                tambahBarangJual(maks);
                dapatkanJumlah();
            } else if (maks >= 1) { // Saat ada data (tabel penjualan).                
                for (int i = 0; i < maks; i++) {
                    if (arr_id_brg[i].equals(arr_id_brg[maks])){ // Jika id brg baru sudah ada
                        arr_kuantitas[i] = penjumlahanStr(arr_kuantitas[i],arr_kuantitas[maks]);
                        arr_sub_jumlah[i] = perkalianStr(arr_harga[i],arr_kuantitas[i]);
                        tulisUlangJual(maks);
                        dapatkanJumlah();
                        return;
                    }
                }
                tulisUlangJual(maks);
                tambahBarangJual(maks); // Jika id brg baru belum ada
                dapatkanJumlah();
            } 
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private String perkalianStr(String a, String b){
        return ""+(Integer.valueOf(a)*Integer.valueOf(b));
    }
    
    private String penjumlahanStr(String a, String b){
        return ""+(Integer.valueOf(a)+Integer.valueOf(b));
    }
    
    private void tambahBarangJual(int pmaks){
        String[] data = new String[] {
            arr_id_brg[pmaks], arr_nama[pmaks], arr_harga[pmaks], 
            arr_kuantitas[pmaks], arr_sub_jumlah[pmaks]};
        tabmode2.addRow(data);
        tbl_transaksi.setModel(tabmode2);        
    }
    
    private void dapatkanJumlah(){
        int maks = tbl_transaksi.getRowCount(); // 1
        int jumlah = 0;
        for (int i = 0; i<maks; i++){
            jumlah += Integer.valueOf(tabmode2.getValueAt(i,4).toString());
        }
        lb_jumlah.setText(""+jumlah);
    }
    
    private void tulisUlangJual(int pmaks){
        for (int j=0; j<pmaks; j++) { // Menulis ulang baris data lama dan baris data baru.
            tabmode2.addRow(new String[] {
                arr_id_brg[j], arr_nama[j], arr_harga[j], arr_kuantitas[j], arr_sub_jumlah[j]});
        }
        tbl_transaksi.setModel(tabmode2);
    }
    
    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        int bar = tbl_transaksi.getSelectedRow();
        if (bar == -1) pesanPopUp("Pilih baris data yang ingin diubah");
        else {           
            arr_kuantitas[bar] = tf_kuantitas.getText();
            if (arr_kuantitas[bar].equals("")) pesanPopUp("Kuantitas kosong ! \nIsi terlebih dahulu.");
            else if (arr_kuantitas[bar].equals("0")) pesanPopUp("Kuantitas = 0 ! \nIsi terlebih dahulu.");
            else {
                Object[] Kolom = {"Id Barang", "Nama Barang", "Harga", "Kuantitas", "Sub Jumlah"};
                tabmode2 = new DefaultTableModel(null, Kolom);
                arr_sub_jumlah[bar] = perkalianStr(arr_harga[bar],arr_kuantitas[bar]);
                tulisUlangJual(tbl_transaksi.getRowCount());
                dapatkanJumlah();
            } 
        }       
        
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void tbl_transaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_transaksiMouseClicked
        int bar = tbl_transaksi.getSelectedRow();        
        String id = tabmode2.getValueAt(bar, 0).toString(); //id_barang
        String nama = tabmode2.getValueAt(bar, 1).toString(); //nama_barang
        String harga = tabmode2.getValueAt(bar, 2).toString(); //harga
        String kuantitas = tabmode2.getValueAt(bar, 3).toString(); //qty
        String f = tabmode2.getValueAt(bar, 4).toString(); //jumlah
        
        // barang
        lb_id_brg.setText(id);
        lb_nama.setText(nama);
        lb_harga.setText(harga);
        tf_kuantitas.setText(kuantitas);
        
        // dapatkan stok
        String stok = "";
        String query = "SELECT kuantitas_brg FROM barang WHERE id_brg = '"+id+"'";
        try {            
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()){
                stok = hasil.getString("kuantitas_brg");
            }
        } catch (SQLException ee){
            JOptionPane.showMessageDialog(null, "Gagal mengambil stok barang");
        }
        lb_stok.setText(stok);        
    }//GEN-LAST:event_tbl_transaksiMouseClicked

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int bar = tbl_transaksi.getSelectedRow();
        if (bar == -1) pesanPopUp("Pilih baris data yang ingin diubah");
        else {
            int ok = JOptionPane.showConfirmDialog(null, "Hapus", "Konfirmasi Dialog", 
                     JOptionPane.YES_NO_OPTION);
            if (ok==0) tabmode2.removeRow(bar);
            dapatkanJumlah();
        }        
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_selesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selesaiActionPerformed
        int maks = tbl_transaksi.getRowCount();
        if (maks == 0) pesanPopUp("Tabel kosong ! \nIsi data tabel terlebih dahulu.");
        else {
            String faktur = lb_faktur.getText();
            int jumlah = Integer.valueOf(lb_jumlah.getText());
            String tgl = lb_tgl.getText();            
            String tahun = tgl.substring(6,10);
            String bulan = tgl.substring(3,5);
            String hari = tgl.substring(0,2);
            tgl = tahun+"-"+bulan+"-"+hari;
            
            String query = "INSERT INTO penjualan VALUES (?,?,?)";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, faktur);
                stat.setInt(2, jumlah);
                stat.setString(3, tgl);               
                stat.executeUpdate();
            } catch (SQLException e) {
                pesanSQLPopUp("Gagal menambahkan data penjualan",e);
            }
            
            query = "INSERT INTO penjualan_detail VALUE (?,?,?,?)";
            for (int i = 0; i < maks; i++) {
                try {
                    PreparedStatement stat2 = conn.prepareStatement (query);
                    stat2.setString(1, faktur);
                    stat2.setString(2, arr_id_brg[i]);
                    stat2.setString(3, arr_kuantitas[i]);
                    stat2.setString(4, arr_sub_jumlah[i]);                
                    stat2.executeUpdate();
                } catch (SQLException e) {
                    pesanSQLPopUp("Gagal menambahkan data penjualan detail",e);
                }
            }
            
            // Kurangi Stok
            for (int i = 0; i < maks; i++){
                int kuantDB = 0;
                query = "SELECT kuantitas_brg FROM barang WHERE id_brg = '"+arr_id_brg[i]+"'";
                try {                    
                    Statement stat3 = conn.createStatement();
                    ResultSet hasil = stat3.executeQuery(query);
                    if (hasil.next()) kuantDB = hasil.getInt("kuantitas_brg");
                    arr_kuantitas[i] = ""+ (kuantDB - Integer.valueOf(arr_kuantitas[i]));
                    query = "UPDATE barang SET kuantitas_brg=? WHERE id_brg=?";
                    PreparedStatement stat4 = conn.prepareStatement(query);
                    stat4.setString(1, arr_kuantitas[i]);
                    stat4.setString(2, arr_id_brg[i]);            
                    stat4.executeUpdate();
                } catch (SQLException e){
                    pesanSQLPopUp("Data barang gagal diubah",e);
                }
            }
            tabelBarang();
            dapatkanFaktur("mimin");
            Object[] Kolom = {"Id Barang", "Nama Barang", "Harga", "Kuantitas", "Sub Jumlah"};
            tabmode2 = new DefaultTableModel(null, Kolom);
            tbl_transaksi.setModel(tabmode2);
            lb_jumlah.setText("0");
//            pesanPopUp("")
        }
    }//GEN-LAST:event_btn_selesaiActionPerformed

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        Rectangle bound = this.getBounds();
        new Menu(bound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed

    private void btn_ubah_fakturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubah_fakturActionPerformed
        String kode = "", singkatan = "";
        String query = "SELECT * FROM admin WHERE nama_admin = '"+nama_admin+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) {
                kode = hasil.getString("kode_penjualan");
                singkatan = hasil.getString("singkatan_admin");
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mengambil kode dan singkatan",e);
        }
        
        tf_kodeJual.setText(kode);
        tf_singkatanAdm.setText(singkatan);
        Object[] fields = {
            "Kode Penjualan (2 karakter) :", tf_kodeJual,
            "Singkatan Admin (3 karakter) :", tf_singkatanAdm
        };
        int ok = JOptionPane.showConfirmDialog(null, fields, "Ubah Format Faktur",
                 JOptionPane.OK_CANCEL_OPTION);
        if (tf_kodeJual.getText().equals("")) pesanPopUp("Kode penjualan tidak boleh kosong ! \nGagal mengubah kode penjualan");
        else if (tf_singkatanAdm.getText().equals("")) pesanPopUp("Singkatan admin tidak boleh kosong ! \nGagal mengubah singkatan admin");
        else if (ok==0){
            kode = tf_kodeJual.getText().toUpperCase();
            singkatan = tf_singkatanAdm.getText().toUpperCase();
            System.out.println("kode : "+kode+"\nsingkatan : "+singkatan);
            perbaruiKodeSingkatan(kode, singkatan, nama_admin);
            dapatkanFaktur(nama_admin);
        }
    }//GEN-LAST:event_btn_ubah_fakturActionPerformed
      
    public void myInitComponents(){
        tf_kodeJual.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (tf_kodeJual.getText().length()>=2)
                    e.consume();
            }
        });
        
        tf_singkatanAdm.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (tf_singkatanAdm.getText().length()>=3)
                    e.consume();
            }
        });
    }
    
    private void perbaruiKodeSingkatan(String pkode, String psingkatan, String pnama_adm){
        String query = "UPDATE admin SET kode_penjualan=?, singkatan_admin=? WHERE nama_admin=?";
        try {                
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setString(1, pkode);
            stat.setString(2, psingkatan);
            stat.setString(3, pnama_adm);
            stat.executeUpdate();            
        } catch (SQLException e){
            pesanSQLPopUp("Data gagal diubah",e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
               
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penjualan().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utility.bg2 bg21;
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_selesai;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JButton btn_ubah_faktur;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lb_faktur;
    private javax.swing.JLabel lb_harga;
    private javax.swing.JLabel lb_id_brg;
    private javax.swing.JLabel lb_jumlah;
    private javax.swing.JLabel lb_nama;
    private javax.swing.JLabel lb_stok;
    private javax.swing.JLabel lb_tgl;
    private javax.swing.JTable tbl_barang;
    private javax.swing.JTable tbl_transaksi;
    private javax.swing.JTextField tf_kuantitas;
    private javax.swing.JTextField tf_pencarian;
    // End of variables declaration//GEN-END:variables
}
    
