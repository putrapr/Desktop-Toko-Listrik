package main;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utility.Koneksi_db;

/**
 * @author Putra Prasetya
 */
public class Penyesuaian extends javax.swing.JFrame {
    private Connection conn = new Koneksi_db().connect();
    private DefaultTableModel tabmode;
    
    public Penyesuaian() {
        initComponents();        
    }
    
    public Penyesuaian(Rectangle bound) {
        initComponents();
        dapatkanNamaBrg();
        rb_status_belum.setSelected(true);
        rb_tampil_tidak.setSelected(true);
        tabelPenyesuaian();
        
        // terima ukuran window & tetapkan di window yang aktif
        this.setBounds(bound);
               
        //saat restore dari kondisi maximize kembali ke ukuran minimal
        Dimension size = this.getSize();
        Double width = size.getWidth();
        Double height = size.getHeight();
        if (width > 1381 && height > 743) {
            this.setSize(800,500);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rb_grup_status = new javax.swing.ButtonGroup();
        rb_grup_tampilkan = new javax.swing.ButtonGroup();
        bg21 = new utility.bg2();
        jLabel25 = new javax.swing.JLabel();
        tf_kuantitas = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        btn_simpan = new javax.swing.JButton();
        btn_ubah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tbl_penyesuaian = new javax.swing.JTable();
        cb_nama = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lb_pemasok = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lb_no_faktur = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rb_status_belum = new javax.swing.JRadioButton();
        rb_status_beres = new javax.swing.JRadioButton();
        alamatScrollPane = new javax.swing.JScrollPane();
        ta_ket = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        rb_tampil_ya = new javax.swing.JRadioButton();
        rb_tampil_tidak = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        btn_kembali = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lb_harga = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        bg21.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("<html> Nama Barang <br> Bermasalah");

        tf_kuantitas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_kuantitasKeyTyped(evt);
            }
        });

        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Keterangan");

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        tbl_penyesuaian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tanggal", "Nama Barang", "Harga", "Kuant", "Keterangan", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_penyesuaian.getTableHeader().setReorderingAllowed(false);
        tbl_penyesuaian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_penyesuaianMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tbl_penyesuaian);
        if (tbl_penyesuaian.getColumnModel().getColumnCount() > 0) {
            tbl_penyesuaian.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbl_penyesuaian.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbl_penyesuaian.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        cb_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_namaActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Harga perbuah");

        lb_pemasok.setForeground(new java.awt.Color(255, 255, 255));
        lb_pemasok.setText("Bina Mandiri Stationer");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("<html>Faktur <br>Pembelian");

        lb_no_faktur.setForeground(new java.awt.Color(255, 255, 255));
        lb_no_faktur.setText("P092-AZ");

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Kuantitas");

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("buah");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Status");

        rb_grup_status.add(rb_status_belum);
        rb_status_belum.setForeground(new java.awt.Color(255, 255, 255));
        rb_status_belum.setText("Belum Sesuai");

        rb_grup_status.add(rb_status_beres);
        rb_status_beres.setForeground(new java.awt.Color(255, 255, 255));
        rb_status_beres.setText("Beres");

        ta_ket.setColumns(20);
        ta_ket.setRows(5);
        alamatScrollPane.setViewportView(ta_ket);

        jLabel2.setText("Tampilkan Semua :");

        rb_grup_tampilkan.add(rb_tampil_ya);
        rb_tampil_ya.setText("Ya");
        rb_tampil_ya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_tampil_yaActionPerformed(evt);
            }
        });

        rb_grup_tampilkan.add(rb_tampil_tidak);
        rb_tampil_tidak.setText("Tidak");
        rb_tampil_tidak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_tampil_tidakActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Penyesuaian Barang");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btn_kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_kembali.setText("<< Kembali");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Pemasok");

        lb_harga.setForeground(new java.awt.Color(255, 255, 255));
        lb_harga.setText("50000");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Rp.");

        javax.swing.GroupLayout bg21Layout = new javax.swing.GroupLayout(bg21);
        bg21.setLayout(bg21Layout);
        bg21Layout.setHorizontalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(13, 13, 13)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addComponent(cb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(bg21Layout.createSequentialGroup()
                                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(bg21Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel8)
                                                .addGap(2, 2, 2)
                                                .addComponent(lb_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(bg21Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lb_no_faktur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lb_pemasok, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addComponent(rb_status_belum)
                                .addGap(18, 18, 18)
                                .addComponent(rb_status_beres))
                            .addComponent(alamatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(267, 267, 267)
                        .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                        .addComponent(btn_kembali)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rb_tampil_ya)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rb_tampil_tidak)
                        .addGap(8, 8, 8)))
                .addGap(18, 18, 18))
        );
        bg21Layout.setVerticalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(cb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tf_kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_harga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rb_status_belum, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rb_status_beres, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_pemasok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(alamatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_simpan)
                            .addComponent(btn_ubah)
                            .addComponent(btn_hapus)))
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_no_faktur, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rb_tampil_ya, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_tampil_tidak, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_kembali))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void pesanPopUp(String pesan){
        JOptionPane.showMessageDialog(null, pesan);
    }
    
    private void pesanSQLPopUp(String pesan, SQLException ee){
        JOptionPane.showMessageDialog(null, pesan+" : "+ee);
    }
    
    private void dapatkanNamaBrg(){
        try {
            String query = "SELECT nama_brg FROM barang";
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            while (hasil.next()) cb_nama.addItem(hasil.getString("nama_brg"));            
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil nama barang",e);
        }
    }
    
    private void tabelPenyesuaian(){
        String nama = "", kuant = "", harga="", ket = "", tgl = "", status="", a = "", b = "", c = "", query="";
        Object[] Baris = {"Tanggal", "Nama Barang", "Harga perbuah", "Kuant", "Keterangan", "Status"};
        tabmode = new DefaultTableModel(null, Baris);
        tbl_penyesuaian.setModel(tabmode);
        if (rb_tampil_tidak.isSelected()) {
           query = "SELECT * FROM penyesuaian JOIN barang ON (penyesuaian.id_brg_suai = barang.id_brg) "
                    + "WHERE status_suai = 'Belum Sesuai' ORDER BY tgl_suai DESC";
        } else if (rb_tampil_ya.isSelected()) {
            query = "SELECT * FROM penyesuaian JOIN barang ON (penyesuaian.id_brg_suai = barang.id_brg) "
                    + "ORDER BY tgl_suai DESC";
        }
        
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            while (hasil.next()) {
                nama = hasil.getString("nama_brg");
                kuant = hasil.getString("kuantitas_suai");
                harga = hasil.getString("harga_beli_brg");
                ket = hasil.getString("ket_suai");
                tgl = hasil.getString("tgl_suai");
                status = hasil.getString("status_suai");
                a = tgl.substring(8,10);
                b = tgl.substring(5,7);
                c = tgl.substring(0,4);
                tgl = a+"-"+b+"-"+c;
                String[] data = {tgl, nama, harga, kuant, ket, status};
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan data penyesuaian",e);
        }        
    }

    private void cb_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_namaActionPerformed
        String nama = cb_nama.getSelectedItem().toString(); 
        String id_brg = dapatkanIdBrg(nama);
        String faktur = dapatkanFakturBeli(id_brg);
        int harga_beli = dapatkanHargaBeli(id_brg);
        String nama_pms = dapatkanNamaPms(faktur);
        
        lb_harga.setText(""+harga_beli);
        lb_pemasok.setText(nama_pms);
        lb_no_faktur.setText(faktur);
    }//GEN-LAST:event_cb_namaActionPerformed

    private String dapatkanIdBrg(String pnama){
        String query = "SELECT id_brg FROM barang WHERE nama_brg = '"+pnama+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return hasil.getString("id_brg");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil id barang",e);
        }
        return "";
    }
    
    private String dapatkanFakturBeli(String pid_brg){
        String query = "SELECT faktur_bdetail FROM pembelian_detail "
                      + "WHERE id_brg_bdetail = '"+pid_brg+"' ORDER BY faktur_bdetail DESC";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return hasil.getString("faktur_bdetail");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil faktur beli",e);
        }
        return "";
    }
    
    private int dapatkanHargaBeli(String pid_brg){
        String query = "SELECT * FROM pembelian_detail JOIN templat ON "
                        + "(pembelian_detail.id_brg_bdetail = templat.id_tp) "
                        + "WHERE id_brg_bdetail = '"+pid_brg+"' ORDER BY faktur_bdetail DESC";
        int jumlah_rp = 0, kuant = 0, konversi = 0;
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) {
                jumlah_rp = hasil.getInt("jumlah_rp_bdetail");
                kuant = hasil.getInt("kuantitas_bdetail");
                konversi = hasil.getInt("konversi_tp");
                return (jumlah_rp / kuant) / konversi;
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil harga beli",e);
        }
        return 0;
    }
    
    private String dapatkanNamaPms(String pfaktur){
        String query = "SELECT pemasok.nama_pms FROM pembelian "
            + "JOIN pemasok ON (pembelian.id_pms_beli = pemasok.id_pms) "
            + "WHERE faktur_beli = '"+pfaktur+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return hasil.getString("nama_pms");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil nama pemasok",e);
        }
        return "";
    }
    
    private void tf_kuantitasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_kuantitasKeyTyped
        char masukan = evt.getKeyChar();
        if (!(Character.isDigit(masukan))) evt.consume();
    }//GEN-LAST:event_tf_kuantitasKeyTyped

    private void rb_tampil_yaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_tampil_yaActionPerformed
        tabelPenyesuaian();
    }//GEN-LAST:event_rb_tampil_yaActionPerformed

    private void rb_tampil_tidakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_tampil_tidakActionPerformed
        tabelPenyesuaian();
    }//GEN-LAST:event_rb_tampil_tidakActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String nama = cb_nama.getSelectedItem().toString();
        String id_brg = dapatkanIdBrg(nama);
        String kuant = tf_kuantitas.getText();
        String keterangan = ta_ket.getText();
        if (kuant.equals("")) pesanPopUp("Kuantitas kosong ! \nIsi terlebih dahulu");
        else if (kuant.equals("0")) pesanPopUp("Kuantitas = 0 ! \nIsi kuantitas minimal 1");
        else if (keterangan.equals("")) pesanPopUp("Keterangan kosong ! \nIsi terlebih dahulu");
        else if (adaIdBrg(id_brg)) pesanPopUp("Nama barang sudah ada !");
        else {
            String id_pms = dapatkanIdPms(lb_pemasok.getText());
            String faktur = lb_no_faktur.getText();          
            String tgl = dapatkanTglSekarang();
            String status= "";
            if (rb_status_belum.isSelected()) status="Belum Sesuai";
            else status="Beres";
            
            String query = "INSERT INTO penyesuaian VALUES (?,?,?,?,?,?,?,?)";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, null);
                stat.setString(2, id_brg);
                stat.setString(3, id_pms);
                stat.setString(4, faktur);
                stat.setString(5, kuant);
                stat.setString(6, keterangan);
                stat.setString(7, tgl);
                stat.setString(8, status);            
                stat.executeUpdate(); 
            } catch (SQLException e) {
                pesanSQLPopUp("Data gagal disimpan",e);
            }
            tabelPenyesuaian();
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private boolean adaIdBrg(String pidbrg){
        String query = "SELECT id_brg_suai FROM penyesuaian WHERE id_brg_suai = '"+pidbrg+"' "
                    + "AND status_suai='Belum Sesuai'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return true; // Jika id ada
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal cek nama telp",e);
        }
        return false;
    }
 
    private String dapatkanIdPms(String pnama_pms){
        String query = "SELECT id_pms FROM pemasok WHERE nama_pms = '"+pnama_pms+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return hasil.getString("id_pms");
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan id pemasok",e);
        }
        return "";
    }
    
    private String dapatkanTglSekarang() {
        Date date = new Date();
        SimpleDateFormat formatting = new SimpleDateFormat("yyyy-MM-dd");
        return formatting.format(date);
    }
    
    private void tbl_penyesuaianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_penyesuaianMouseClicked
        int baris = tbl_penyesuaian.getSelectedRow();
        String nama = tabmode.getValueAt(baris, 1).toString();
        String kuant = tabmode.getValueAt(baris, 3).toString();
        String keterangan = tabmode.getValueAt(baris, 4).toString();
        String status = tabmode.getValueAt(baris, 5).toString();
        
        cb_nama.setSelectedItem(nama);
        tf_kuantitas.setText(kuant);
        ta_ket.setText(keterangan);
        switch (status) {
            case "Belum Sesuai":
                rb_status_belum.setSelected(true);
                rb_status_beres.setSelected(false);
                break;
            case "Beres":
                rb_status_belum.setSelected(false);
                rb_status_beres.setSelected(true);
                break;
            default:
                rb_status_belum.setSelected(false);
                rb_status_beres.setSelected(false);
                break;
        }
    }//GEN-LAST:event_tbl_penyesuaianMouseClicked

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        int baris = tbl_penyesuaian.getSelectedRow();
        if (baris == -1) pesanPopUp("Pilih baris data yang ingin diubah");
        else {
            String kuant = tf_kuantitas.getText();
            String keterangan = ta_ket.getText();
            if (kuant.equals("")) pesanPopUp("Kuantitas kosong ! \nIsi terlebih dahulu");
            else if (kuant.equals("0")) pesanPopUp("Kuantitas = 0 ! \nIsi kuantitas minimal 1");
            else if (keterangan.equals("")) pesanPopUp("Keterangan kosong ! \nIsi terlebih dahulu");
            else {
                String tgl_asal = tabmode.getValueAt(baris, 0).toString();
                String tahun = tgl_asal.substring(6,10);
                String bulan = tgl_asal.substring(3,5);
                String tgl = tgl_asal.substring(0,2);
                tgl_asal = tahun+"-"+bulan+"-"+tgl;
                
                String nama_asal = tabmode.getValueAt(baris, 1).toString();
                String id_brg_asal = dapatkanIdBrg(nama_asal);
                String id_suai = dapatkanIdSuai(tgl_asal, id_brg_asal);

                String nama = cb_nama.getSelectedItem().toString();
                String id_brg = dapatkanIdBrg(nama); 
                String id_pms = dapatkanIdPms(lb_pemasok.getText());
                String faktur = lb_no_faktur.getText();
                String status="";
                if (rb_status_belum.isSelected()) status="Belum Sesuai";
                else status="Beres";
                String query = "UPDATE penyesuaian SET "
                           + "id_brg_suai=?, id_pms_suai=?, faktur_beli_suai=?, "
                           + "kuantitas_suai=?, ket_suai=?, status_suai=? "
                           + "WHERE id_suai=?";
                try {
                    PreparedStatement stat = conn.prepareStatement(query);
                    stat.setString(1, id_brg);
                    stat.setString(2, id_pms);
                    stat.setString(3, faktur);
                    stat.setString(4, kuant);
                    stat.setString(5, keterangan);
                    stat.setString(6, status);
                    stat.setString(7, id_suai);
                    stat.executeUpdate();
                } catch(SQLException e) {
                    pesanSQLPopUp("Data gagal diubah",e);
                }
                tabelPenyesuaian();
            }
        }
    }//GEN-LAST:event_btn_ubahActionPerformed

    private String dapatkanIdSuai(String ptgl, String pid_brg){
        String sql = "SELECT id_suai FROM penyesuaian "
                    + "WHERE id_brg_suai = '"+pid_brg+"' AND tgl_suai = '"+ptgl+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) return hasil.getString("id_suai");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil id penyesuaian",e);
        }
        return "";
    }
    
    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int bar = tbl_penyesuaian.getSelectedRow();
        String tgl_asal = tabmode.getValueAt(bar, 0).toString();
        String tahun = tgl_asal.substring(6,10);
        String bulan = tgl_asal.substring(3,5);
        String tgl = tgl_asal.substring(0,2);
        tgl_asal = tahun+"-"+bulan+"-"+tgl;
        
        String nama_asal = tabmode.getValueAt(bar, 1).toString();
        String id_brg_asal = dapatkanIdBrg(nama_asal);
        String id_suai = dapatkanIdSuai(tgl_asal, id_brg_asal);
        
        int ok = JOptionPane.showConfirmDialog(null,"Hapus","Konfirmasi Dialog", 
                 JOptionPane.YES_NO_OPTION);
        if (ok==0){
            String query = "DELETE FROM penyesuaian WHERE id_suai='"+id_suai+"'";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.executeUpdate();
                tabelPenyesuaian();
            } catch (SQLException e) {
                pesanSQLPopUp("Data gagal dihapus",e);
            }
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        Rectangle bound = this.getBounds();
        new Menu(bound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penyesuaian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penyesuaian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penyesuaian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penyesuaian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penyesuaian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane alamatScrollPane;
    private utility.bg2 bg21;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JComboBox<String> cb_nama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JLabel lb_harga;
    private javax.swing.JLabel lb_no_faktur;
    private javax.swing.JLabel lb_pemasok;
    private javax.swing.ButtonGroup rb_grup_status;
    private javax.swing.ButtonGroup rb_grup_tampilkan;
    private javax.swing.JRadioButton rb_status_belum;
    private javax.swing.JRadioButton rb_status_beres;
    private javax.swing.JRadioButton rb_tampil_tidak;
    private javax.swing.JRadioButton rb_tampil_ya;
    private javax.swing.JTextArea ta_ket;
    private javax.swing.JTable tbl_penyesuaian;
    private javax.swing.JTextField tf_kuantitas;
    // End of variables declaration//GEN-END:variables
}
