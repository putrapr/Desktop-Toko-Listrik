package main;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utility.WordWrapCellRenderer;
import utility.Koneksi_db;

/**
 * @author Putra Prasetya
 */
public class Pemasok extends javax.swing.JFrame {
    private Connection conn = new Koneksi_db().connect();
    private DefaultTableModel tabmode;
    private String atr_nama;
    private String atr_telp;
    
    public Pemasok() {
        initComponents();
    }
    
    public Pemasok(Rectangle bound) {
        initComponents();
        tabelPemasok();
        ta_alamat.setLineWrap(true);
        ta_alamat.setWrapStyleWord(true);
        ta_keterangan.setLineWrap(true);
        ta_keterangan.setWrapStyleWord(true);
        
        // terima ukuran window & tetapkan di window yang aktif
        this.setBounds(bound);
               
        //saat restore dari kondisi maximize kembali ke ukuran minimal
        Dimension size = this.getSize();
        Double width = size.getWidth();
        Double height = size.getHeight();
        if (width > 1381 && height > 743) {
            this.setSize(800,500);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        }               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg21 = new utility.bg2();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_alamat = new javax.swing.JTextArea();
        btn_simpan = new javax.swing.JButton();
        btn_ubah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_bersihkan = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_pemasok = new javax.swing.JTable();
        tf_nama = new javax.swing.JTextField();
        tf_no_telp = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        ta_keterangan = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btn_kembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nama");
        jLabel8.setMaximumSize(new java.awt.Dimension(100, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(70, 14));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Alamat");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("No. Telepon");
        jLabel10.setPreferredSize(new java.awt.Dimension(70, 14));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Keterangan");
        jLabel11.setPreferredSize(new java.awt.Dimension(70, 14));

        ta_alamat.setColumns(20);
        ta_alamat.setRows(5);
        jScrollPane3.setViewportView(ta_alamat);

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_bersihkan.setText("Bersihkan");
        btn_bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bersihkanActionPerformed(evt);
            }
        });

        tbl_pemasok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, ""},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama", "No.Telepon", "Alamat", "Keterangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_pemasok.setMinimumSize(new java.awt.Dimension(120, 800));
        tbl_pemasok.setPreferredSize(new java.awt.Dimension(600, 800));
        tbl_pemasok.getTableHeader().setReorderingAllowed(false);
        tbl_pemasok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_pemasokMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_pemasok);
        if (tbl_pemasok.getColumnModel().getColumnCount() > 0) {
            tbl_pemasok.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        ta_keterangan.setColumns(20);
        ta_keterangan.setRows(5);
        jScrollPane6.setViewportView(ta_keterangan);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Pemasok");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btn_kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_kembali.setText("<< Kembali");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bg21Layout = new javax.swing.GroupLayout(bg21);
        bg21.setLayout(bg21Layout);
        bg21Layout.setHorizontalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(tf_nama)))
                    .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bg21Layout.createSequentialGroup()
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(bg21Layout.createSequentialGroup()
                            .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btn_kembali)
                        .addGroup(bg21Layout.createSequentialGroup()
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tf_no_telp)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        bg21Layout.setVerticalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_nama)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_no_telp)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_simpan)
                            .addComponent(btn_ubah))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_hapus)
                            .addComponent(btn_bersihkan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_kembali))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        Rectangle pegawaiBound = this.getBounds();
        new Menu(pegawaiBound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed
    
    private void tabelPemasok(){
        Object[] Baris = {"Nama", "No. Telepon", "Alamat" , "Keterangan"};
        tabmode = new DefaultTableModel(null, Baris);
        tbl_pemasok.setModel(tabmode);
        String query = "SELECT * FROM pemasok";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            String a="",b="",c="",d="";
            while (hasil.next()){
                a = hasil.getString("nama_pms");
                b = hasil.getString("telp_pms");
                c = hasil.getString("alamat_pms");
                d = hasil.getString("ket_pms");
                String[] data={a,b,c,d};
                tabmode.addRow(data); 
            }
        }catch (SQLException e){
            pesanSQLPopUp("Data tabel pemasok gagal ditampilkan",e);
        }
        tbl_pemasok.getColumnModel().getColumn(3).setCellRenderer(new WordWrapCellRenderer());
    }
    
    private void pesanPopUp(String pesan){
        JOptionPane.showMessageDialog(null, pesan);
    }
    
    private void pesanSQLPopUp(String pesan, SQLException ee){
        JOptionPane.showMessageDialog(null, pesan+" : "+ee);
    }
        
    private void tbl_pemasokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_pemasokMouseClicked
        int bar = tbl_pemasok.getSelectedRow();
        String nama = tabmode.getValueAt(bar, 0).toString();
        String telp = tabmode.getValueAt(bar, 1).toString();
        String alamat = tabmode.getValueAt(bar, 2).toString();
        String ket = tabmode.getValueAt(bar, 3).toString();
        this.atr_nama = nama;
        this.atr_telp = telp;
        
        tf_nama.setText(nama);
        ta_alamat.setText(alamat);
        tf_no_telp.setText(telp);
        ta_keterangan.setText(ket);
    }//GEN-LAST:event_tbl_pemasokMouseClicked

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String nama = tf_nama.getText();
        String telp = tf_no_telp.getText();
        if (nama.equals("")) pesanPopUp("Nama Kosong !. \nIsi terlebih dahulu.");
        else if (telp.equals("")) pesanPopUp("No. Telepon Kosong !. \nIsi terlebih dahulu.");
        else if (adaNamaTelp(nama,telp)) pesanPopUp("Nama dan No. Telepon sudah ada !");
        else {
            String query = "INSERT INTO pemasok VALUES (?,?,?,?,?)";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, null);
                stat.setString(2, nama);
                stat.setString(3, ta_alamat.getText());
                stat.setString(4, telp);
                stat.setString(5, ta_keterangan.getText());

                stat.executeUpdate();
                bersihkanMasukan();            
                tabelPemasok();            
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data Gagal Disimpan: " + e);
            }
        }        
    }//GEN-LAST:event_btn_simpanActionPerformed
    
    private boolean adaNamaTelp(String pnama, String ptelp){
        String query = "SELECT nama_pms FROM pemasok WHERE nama_pms = '"+pnama+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()){  // Jika nama ada                  
                query = "SELECT telp_pms FROM pemasok WHERE telp_pms = '"+ptelp+"'";
                hasil = stat.executeQuery(query);
                if (hasil.next()) return true; // Jika telp ada                    
            }
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal cek nama telp",e);
        }
        return false;
    }
    
    private void bersihkanMasukan(){
        tf_nama.setText("");
        ta_alamat.setText("");
        tf_no_telp.setText("");
        ta_keterangan.setText("");
        tf_nama.requestFocus();
    }
        
    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        int id = ambilIdPms();
        String nama = tf_nama.getText();
        String telp = tf_no_telp.getText();
        if (nama.equals("")) pesanPopUp("Nama Kosong !. \nIsi terlebih dahulu.");
        else if (telp.equals("")) pesanPopUp("No. Telepon Kosong !. \nIsi terlebih dahulu.");
        else if (adaNamaTelp(nama,telp)) pesanPopUp("Nama dan No. Telepon sudah ada !");
        else {
            String query = "UPDATE pemasok SET nama_pms=?, alamat_pms=?, telp_pms=?, ket_pms=? WHERE id_pms=?";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, nama);
                stat.setString(2, ta_alamat.getText());
                stat.setString(3, telp);
                stat.setString(4, ta_keterangan.getText());
                stat.setInt(5, id);

                stat.executeUpdate();
                bersihkanMasukan();
                tabelPemasok();
            } catch(SQLException e){
                pesanSQLPopUp("Data gagal diubah",e);
            }
        }    
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int id = ambilIdPms();
        int ok = JOptionPane.showConfirmDialog(null,"Hapus","Konfirmasi Dialog", 
                 JOptionPane.YES_NO_OPTION);
        if (ok==0){
            String query = "DELETE FROM pemasok WHERE id_pms ='"+id+"'";
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.executeUpdate();
                bersihkanMasukan();                
                tabelPemasok();                
            } catch (SQLException e){
                pesanSQLPopUp("Data gagal dihapus",e);
            }
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bersihkanActionPerformed
        bersihkanMasukan();
    }//GEN-LAST:event_btn_bersihkanActionPerformed

    private int ambilIdPms(){
        String query = "SELECT id_pms FROM pemasok WHERE nama_pms = '"+atr_nama+"' AND telp_pms = '"+atr_telp+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(query);
            if (hasil.next()) return hasil.getInt("id_pms");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ambil id pegawai",e);
        }
        return 0;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
   

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pemasok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utility.bg2 bg21;
    private javax.swing.JButton btn_bersihkan;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea ta_alamat;
    private javax.swing.JTextArea ta_keterangan;
    private javax.swing.JTable tbl_pemasok;
    private javax.swing.JTextField tf_nama;
    private javax.swing.JTextField tf_no_telp;
    // End of variables declaration//GEN-END:variables
}
