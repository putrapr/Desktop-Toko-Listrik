package main;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import utility.Koneksi_db;

/**
 * @author Putra Prasetya
 */
public final class Templat extends javax.swing.JFrame {
    private Connection conn = new Koneksi_db().connect();
    private DefaultTableModel tabmode;
    private JCheckBox ckb_karakterK = new JCheckBox();
    private JComboBox cbb_karakterK = new JComboBox(dapatkanIdCbox());
    private int nilai_konversi;
    private String id_pilihan;
    
    public Templat() {
        initComponents();
        rb_aktif.setSelected(true);
        tabelTemplat();        
        dapatkanKategori();
        dapatkanId();
        dapatkanSatuan();
        myInitComponents();
        String satuan = cb_satuan.getSelectedItem().toString();
        this.nilai_konversi = dapatkanKonversi(satuan);
    }
    
    public Templat(Rectangle bound) {
        initComponents();
        rb_aktif.setSelected(true);
        tabelTemplat();        
        dapatkanKategori();
        dapatkanId();
        dapatkanSatuan();
        myInitComponents();
        String satuan = cb_satuan.getSelectedItem().toString();
        this.nilai_konversi = dapatkanKonversi(satuan);
        
        // terima ukuran window & tetapkan di window yang aktif
        this.setBounds(bound);
               
        //saat restore dari kondisi maximize kembali ke ukuran minimal
        Dimension size = this.getSize();
        Double width = size.getWidth();
        Double height = size.getHeight();
        if (width > 1381 && height > 743) {
            this.setSize(850,540);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        }        
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bg21 = new utility.bg2();
        btn_simpan = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_templat = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_nama = new javax.swing.JTextField();
        cb_kategori = new javax.swing.JComboBox<>();
        lb_id_templat = new javax.swing.JLabel();
        btn_plus_kategori = new javax.swing.JButton();
        btn_ubah_kategori = new javax.swing.JButton();
        cb_satuan = new javax.swing.JComboBox<>();
        btn_plus_satuan = new javax.swing.JButton();
        btn_ubah_satuan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_jumlah_beli = new javax.swing.JTextField();
        tf_satuan_jual = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        rb_aktif = new javax.swing.JRadioButton();
        rb_nonaktif = new javax.swing.JRadioButton();
        btn_hapus = new javax.swing.JButton();
        btn_ubah = new javax.swing.JButton();
        btn_bersihkan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btn_kembali = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lb_jumlah_jual = new javax.swing.JLabel();
        lb_satuan_beli = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 450));

        btn_simpan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        tbl_templat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Barang", "Nama Barang", "Satuan", "Harga Beli", "Harga Jual", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_templat.getTableHeader().setReorderingAllowed(false);
        tbl_templat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_templatMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tbl_templat);
        if (tbl_templat.getColumnModel().getColumnCount() > 0) {
            tbl_templat.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbl_templat.getColumnModel().getColumn(2).setPreferredWidth(10);
            tbl_templat.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbl_templat.getColumnModel().getColumn(4).setPreferredWidth(10);
            tbl_templat.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Kategori");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Id Barang");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nama Barang");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Satuan");

        tf_nama.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        cb_kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_kategoriActionPerformed(evt);
            }
        });

        lb_id_templat.setForeground(new java.awt.Color(255, 255, 255));
        lb_id_templat.setText("...");

        btn_plus_kategori.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_add_11px.png"))); // NOI18N
        btn_plus_kategori.setMaximumSize(new java.awt.Dimension(43, 30));
        btn_plus_kategori.setMinimumSize(new java.awt.Dimension(43, 20));
        btn_plus_kategori.setPreferredSize(new java.awt.Dimension(43, 30));
        btn_plus_kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plus_kategoriActionPerformed(evt);
            }
        });

        btn_ubah_kategori.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_transfer_11px.png"))); // NOI18N
        btn_ubah_kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubah_kategoriActionPerformed(evt);
            }
        });

        cb_satuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_satuanActionPerformed(evt);
            }
        });

        btn_plus_satuan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_add_11px.png"))); // NOI18N
        btn_plus_satuan.setMaximumSize(new java.awt.Dimension(43, 30));
        btn_plus_satuan.setMinimumSize(new java.awt.Dimension(43, 20));
        btn_plus_satuan.setPreferredSize(new java.awt.Dimension(43, 30));
        btn_plus_satuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plus_satuanActionPerformed(evt);
            }
        });

        btn_ubah_satuan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_transfer_11px.png"))); // NOI18N
        btn_ubah_satuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubah_satuanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Harga Beli");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Harga Jual");

        tf_jumlah_beli.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_jumlah_beli.setText("0");
        tf_jumlah_beli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_jumlah_beliKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_jumlah_beliKeyTyped(evt);
            }
        });

        tf_satuan_jual.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_satuan_jual.setText("0");
        tf_satuan_jual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_satuan_jualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_satuan_jualKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Status");

        buttonGroup1.add(rb_aktif);
        rb_aktif.setForeground(new java.awt.Color(255, 255, 255));
        rb_aktif.setText("Aktif");

        buttonGroup1.add(rb_nonaktif);
        rb_nonaktif.setForeground(new java.awt.Color(255, 255, 255));
        rb_nonaktif.setText("Nonaktif");

        btn_hapus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_ubah.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_ubah.setText("Ubah");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_bersihkan.setText("Bersihkan");
        btn_bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bersihkanActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Templat Barang");

        btn_kembali.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_kembali.setText("<< Kembali");
        btn_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kembaliActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("satuan :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("satuan :");

        lb_jumlah_jual.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_jumlah_jual.setText("0");

        lb_satuan_beli.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_satuan_beli.setText("0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Rp.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Rp.");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Rp.");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Rp.");

        javax.swing.GroupLayout bg21Layout = new javax.swing.GroupLayout(bg21);
        bg21.setLayout(bg21Layout);
        bg21Layout.setHorizontalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane7)
                            .addGroup(bg21Layout.createSequentialGroup()
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                            .addComponent(cb_satuan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_plus_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_ubah_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                            .addComponent(cb_kategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_plus_kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_ubah_kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(tf_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lb_id_templat, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(bg21Layout.createSequentialGroup()
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(rb_aktif)
                                            .addGap(18, 18, 18)
                                            .addComponent(rb_nonaktif))
                                        .addGroup(bg21Layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(168, 168, 168)
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(bg21Layout.createSequentialGroup()
                                                    .addComponent(jLabel16)
                                                    .addGap(2, 2, 2)
                                                    .addComponent(tf_satuan_jual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(bg21Layout.createSequentialGroup()
                                                    .addComponent(jLabel17)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(lb_satuan_beli, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(bg21Layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(2, 2, 2)
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tf_jumlah_beli, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(bg21Layout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(lb_jumlah_jual)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel12))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg21Layout.createSequentialGroup()
                                        .addComponent(btn_simpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(btn_bersihkan)))))
                        .addGap(16, 16, 16))
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_kembali)
                            .addComponent(jLabel5))
                        .addContainerGap())))
        );
        bg21Layout.setVerticalGroup(
            bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bg21Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(cb_kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tf_jumlah_beli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(lb_satuan_beli, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(jLabel17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(lb_id_templat)
                                .addComponent(jLabel7)
                                .addComponent(tf_satuan_jual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(jLabel18)
                                .addComponent(lb_jumlah_jual))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tf_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(rb_aktif)
                            .addComponent(rb_nonaktif)))
                    .addComponent(btn_plus_kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ubah_kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cb_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_simpan)
                                .addComponent(btn_ubah)
                                .addComponent(btn_hapus)
                                .addComponent(btn_bersihkan)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_kembali)
                        .addGap(18, 18, 18))
                    .addGroup(bg21Layout.createSequentialGroup()
                        .addGroup(bg21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_plus_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_ubah_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelTemplat(){
        Object[] Baris = {"ID Barang", "Nama Barang", "Satuan", "Harga Beli", "Harga Jual", "Status"};
        tabmode = new DefaultTableModel(null, Baris);
        tbl_templat.setModel(tabmode);
        String sql = "SELECT * FROM templat";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            String a="",b="",c="",d="",e="",f="";
            while (hasil.next()){
                a = hasil.getString("id_tp");
                b = hasil.getString("nama_tp");
                c = hasil.getString("satuan_tp");
                d = hasil.getString("harga_beli_tp");
                e = hasil.getString("harga_jual_tp");
                f = hasil.getString("status_tp");   
                String[] data={a,b,c,d,e,f};
                tabmode.addRow(data); 
            }
        } catch (SQLException e){
            pesanSQLPopUp("Data tabel gagal ditampilkan: ",e);
        }
    }
    
    private void pesanPopUp(String pesan){
        JOptionPane.showMessageDialog(null, pesan);
    }
    
    private void pesanSQLPopUp(String pesan, SQLException ee){
        JOptionPane.showMessageDialog(null, pesan+" : "+ee);
    }
    
    private void dapatkanKategori(){
        int jml_kategori = 0;
        String sql = "SELECT COUNT(DISTINCT(kategori_tp)) FROM templat";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) jml_kategori = hasil.getInt("COUNT(DISTINCT(kategori_tp))");            
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Mendapatkan Jenis Barang : " + e);
        }
        String[] kategori = new String[jml_kategori];
        int no=0;
        sql = "SELECT DISTINCT(kategori_tp) FROM templat ORDER BY kategori_tp ASC";
        try {  
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                kategori[no] = hasil.getString("kategori_tp");
                no++;
            }            
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan kategori barang",e);
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(kategori);
        cb_kategori.setModel(model);
    }
    
    private void cb_kategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_kategoriActionPerformed
        dapatkanId();
    }//GEN-LAST:event_cb_kategoriActionPerformed

    private void dapatkanId(){
        String kategori = cb_kategori.getSelectedItem().toString(); 
        String id = "";
        int no = 0;
        String sql = "SELECT id_tp FROM templat WHERE kategori_tp = '"+kategori+"'";
        try {            
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while(hasil.next()){
                id = hasil.getString("id_tp");
            }      
            char idCh = id.charAt(0); 
            no = Integer.parseInt(id.substring(1,6));            
            no++;            
            id = idCh + String.format("%05d",no);
            lb_id_templat.setText(id);            
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan id templat",e);
        }
    }
    
    private void btn_plus_kategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plus_kategoriActionPerformed
        JTextField nama_kategori = new JTextField();
        JComboBox id_kategori = new JComboBox(dapatkanIdCbox());
        Object[] fields = {
            "Nama Kategori :", nama_kategori,
            "1 Huruf Untuk ID :", id_kategori
        };
        
        int ok = JOptionPane.showConfirmDialog(null, fields, "Tambahkan Kategori",
                 JOptionPane.OK_CANCEL_OPTION);
        if (ok==0){
            String str_nama = nama_kategori.getText();
            if (str_nama.equals("")) pesanPopUp("Nama kategori kosong ! \nKategori gagal ditambahkan.");
            else if (adaKategori(str_nama)) pesanPopUp("Kategori sudah ada ! \nKategori gagal ditambahkan.");
            else {
                String str_id = id_kategori.getSelectedItem().toString();
                str_id += "00000";

                // Menambahkan data kosong untuk mendirikan kategori
                String sql = "INSERT INTO templat VALUES (?,?,?,?,?,?,?,?)";            
                try {
                    PreparedStatement stat = conn.prepareStatement(sql);
                    stat.setString(1, str_id);
                    stat.setString(2, str_nama);
                    stat.setString(3, "");
                    stat.setString(4, "Lusin");
                    stat.setInt(5, 12);
                    stat.setInt(6, 0);
                    stat.setInt(7, 0);
                    stat.setString(8, "Nonaktif");
                    stat.executeUpdate();
                } catch(SQLException e){
                    pesanSQLPopUp("Gagal menambahkan id",e);
                }
                cb_kategori.addItem(str_nama);
                tabelTemplat();
            }            
        }
    }//GEN-LAST:event_btn_plus_kategoriActionPerformed
    
    private boolean adaKategori(String pnama){
        String sql = "SELECT kategori_tp FROM templat WHERE kategori_tp = '"+pnama+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) return true;
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal cek nama kategori",e);
        }
        return false;
    }
    
    private String[] dapatkanIdCbox(){
        int jml_id = 0;        
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery("SELECT COUNT(id_tp) FROM templat");
            while(hasil.next()){
                jml_id = hasil.getInt("COUNT(id_tp)");
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mendapatkan jumlah id",e);
        }
        
        String[] huruf_id = new String[jml_id];
        String id = "";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery("SELECT id_tp FROM templat");
            for(int i=0; i<jml_id; i++){
                hasil.next();
                id = hasil.getString("id_tp");
                huruf_id[i] = id.substring(0,1);                
            }            
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mendapatkan id",e);
        }
        
        String[] alfabet = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J",
                             "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T",
                             "U", "V", "W", "X", "Y", "Z"};
        huruf_id = Arrays.stream(huruf_id).distinct().toArray(String[]::new);
        return kurangiArray(alfabet, huruf_id);
    }
    
    private String[] kurangiArray(String[] a, String[] b){
        int no;
        for (int i = 0; i < b.length; i++){
            no = 0;
            for (int j = 0; j < a.length-i; j++){
                if (a[j].equals(b[i])){
                    continue;
                }
                a[no] = a[j];
                no++;
            }
        }

        String[] hasil = new String[a.length - b.length];
        for (int i = 0; i < hasil.length; i++){
            hasil[i] = a[i];
        }
        return hasil;
    }
        
    private void btn_ubah_kategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubah_kategoriActionPerformed
        ckb_karakterK.setSelected(true);
        cbb_karakterK = new JComboBox(dapatkanIdCbox());
        String[] kategori = dapatkanArrayKategori();
        JComboBox cbb_klama = new JComboBox(kategori);        
        JTextField tf_kbaru = new JTextField();
        
        Object[] fields = {
            "Kategori :", cbb_klama,
            "Kategori baru :", tf_kbaru,
            "Ubah id karakter ?", ckb_karakterK,
            "Id karakter baru :", cbb_karakterK
        };
        
        int ok = JOptionPane.showConfirmDialog(null, fields, "Ubah Kategori", 
                 JOptionPane.OK_CANCEL_OPTION);
        if (ok==0){            
            String str_klama = cbb_klama.getSelectedItem().toString();
            String str_kbaru = tf_kbaru.getText();
            String str_karakterK = cbb_karakterK.getSelectedItem().toString();
            if (str_kbaru.equals("")) pesanPopUp("Kategori kosong !. \nUbah kategori dibatalkan.");
            else if (!ckb_karakterK.isSelected()) ubahKarakter(str_klama, str_kbaru);
            else if (ckb_karakterK.isSelected()){
                ubahSemuaId(str_klama,str_karakterK);
                ubahKarakter(str_klama, str_kbaru);
            } 
            dapatkanKategori();
            dapatkanId();
            tabelTemplat();
        }
    }//GEN-LAST:event_btn_ubah_kategoriActionPerformed

    private String[] dapatkanArrayKategori(){
        int panjang = 0, no = 0;
        String sql = "SELECT COUNT(DISTINCT(kategori_tp)) FROM templat";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) panjang = hasil.getInt("COUNT(DISTINCT(kategori_tp))");
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mendapatkan jumlah kategori",e);
        }
        
        String[] arrayKategori = new String[panjang];
        sql = "SELECT DISTINCT(kategori_tp) FROM templat ORDER BY kategori_tp ASC";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                arrayKategori[no]= hasil.getString("kategori_tp");
                no++;
            }
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan kategori",e);
        }
        return arrayKategori;
    }
    
    public void myInitComponents(){
        ckb_karakterK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckb_karakterKActionPerformed(evt);
            }
            });
    }               
    
    private void ckb_karakterKActionPerformed(java.awt.event.ActionEvent evt){
        if (ckb_karakterK.isSelected()){
            cbb_karakterK.setEnabled(true);
        } else {
            cbb_karakterK.setEnabled(false);
        }
    }
    
    private void ubahSemuaId(String kategori, String IdKarakter){
        String id = "", id_baru = "";
        String sql = "SELECT id_tp FROM templat WHERE kategori_tp = '"+kategori+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while(hasil.next()){
                id = hasil.getString("id_tp");
                id_baru = id.substring(1,6);
                id_baru = IdKarakter + id_baru;
                sql = "UPDATE templat SET id_tp = ? WHERE id_tp = '"+id+"'";
                PreparedStatement prep = conn.prepareStatement(sql);
                prep.setString(1, id_baru);
                prep.executeUpdate();
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mengubah semua id",e);
        }
    }
    
    private void ubahKarakter(String kategori_lama, String kategori_baru){
        String sql = "UPDATE templat SET kategori_tp = ? WHERE kategori_tp = '"+kategori_lama+"'";
        try {
            PreparedStatement prep = conn.prepareStatement(sql);
            prep.setString(1, kategori_baru);
            prep.executeUpdate();
        } catch (SQLException e){
            pesanSQLPopUp("Gagal ubah kategori",e);
        }
    }
    
    private void dapatkanSatuan(){
        int panjang = 0;
        String sql = "SELECT COUNT(DISTINCT(satuan_tp)) FROM templat";
        try {     
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) panjang = hasil.getInt("COUNT(DISTINCT(satuan_tp))");
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan jumlah satuan",e);
        }
        
        String[] satuanArray = new String[panjang];
        int no = 0;
        sql = "SELECT DISTINCT(satuan_tp) FROM templat ORDER BY satuan_tp ASC";
        try {     
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                satuanArray[no] = hasil.getString("satuan_tp");
                no++;                    
            }            
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan satuan",e);
        }
        DefaultComboBoxModel model = new DefaultComboBoxModel(satuanArray);
        cb_satuan.setModel(model);
    }
    
    private void btn_plus_satuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plus_satuanActionPerformed
        JTextField tf_satuan = new JTextField();
        JTextField tf_konversiS = new JTextField();
        Object[] fields = {
            "Satuan :", tf_satuan,
            "Nilai konversi satuan :", tf_konversiS
        };
        
        int ok = JOptionPane.showConfirmDialog(null, fields, "Tambahkan Satuan",
                 JOptionPane.OK_CANCEL_OPTION);        
        if (ok==0){
            String str_satuan = tf_satuan.getText();
            String str_konversiS = tf_konversiS.getText();
            // Cek satuan & konversi kosong
            if (str_satuan.equals("")) pesanPopUp("Satuan kosong ! \nSatuan gagal ditambahkan.");
            else if (str_konversiS.equals("")) pesanPopUp("Nilai konversi satuan kosong ! \nSatuan gagal ditambahkan.");
            else if (adaSatuan(str_satuan)) pesanPopUp("Satuan sudah ada ! \nSatuan gagal ditambahkan.");
            else {
                int panjang = 0;
                String sql = "SELECT COUNT(DISTINCT(satuan_tp)) FROM templat";
                try {     
                    Statement stat = conn.createStatement();
                    ResultSet hasil = stat.executeQuery(sql);
                    if (hasil.next()) panjang = hasil.getInt("COUNT(DISTINCT(satuan_tp))");
                } catch (SQLException e) {
                    pesanSQLPopUp("Gagal mendapatkan jumlah satuan",e);
                }
                String[] satuanArray = new String[panjang + 1];
                satuanArray[0] = str_satuan;
                String db_satuan = "";
                int no = 1;
                sql = "SELECT DISTINCT(satuan_tp) FROM templat ORDER BY satuan_tp ASC"; 
                try {     
                    Statement stat = conn.createStatement();
                    ResultSet hasil = stat.executeQuery(sql);
                    while (hasil.next()){
                        db_satuan = hasil.getString("satuan_tp");
                        satuanArray[no] = db_satuan;
                        no++;
                        if (str_satuan.equals(db_satuan)){
                            pesanPopUp("Satuan sudah ada !");
                            return;
                        }
                    }            
                } catch (SQLException e) {
                    pesanSQLPopUp("Gagal mendapatkan satuan",e);
                }
                DefaultComboBoxModel model = new DefaultComboBoxModel(satuanArray);
                cb_satuan.setModel(model);
            }            
        }
    }//GEN-LAST:event_btn_plus_satuanActionPerformed

    private boolean adaSatuan(String psatuan){
        String sql = "SELECT satuan_tp FROM templat WHERE satuan_tp = '"+psatuan+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) return true;
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal cek satuan",e);
        }
        return false;
    }
    
    private void cb_satuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_satuanActionPerformed
        String satuan = cb_satuan.getSelectedItem().toString();
        this.nilai_konversi = dapatkanKonversi(satuan);
        // lakukan action keyRelease jmlBeli
        dapatkanJmlBeli();
    }//GEN-LAST:event_cb_satuanActionPerformed

    private int dapatkanKonversi(String psatuan){
        int keluaran = 1;
        String sql = "SELECT konversi_tp FROM templat WHERE satuan_tp = '"+psatuan+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) keluaran = hasil.getInt("konversi_tp");
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal mendapatkan nilai konversi",e);
        }
        return keluaran;
    }
    
    private void btn_ubah_satuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubah_satuanActionPerformed
        int panjang = cb_satuan.getItemCount();
        String[] satuanArray = new String[panjang];
        for (int i = 0; i < panjang; i++){
            satuanArray[i] = cb_satuan.getItemAt(i);
        }
        
        JComboBox cb_satuanLama = new JComboBox(satuanArray);        
        JTextField tf_satuanBaru = new JTextField();
        JTextField tf_konversiS = new JTextField();
        Object[] fields = {
            "Satuan :", cb_satuanLama,
            "Satuan baru :", tf_satuanBaru,
            "Nilai konversi satuan :", tf_konversiS
        }; 
        int ok = JOptionPane.showConfirmDialog(null, fields, "Ubah Satuan",JOptionPane.OK_CANCEL_OPTION);   
        if (ok==0){
            String str_satuanLama = cb_satuanLama.getSelectedItem().toString();
            String str_satuanBaru = tf_satuanBaru.getText();
            String str_konversiS = tf_konversiS.getText();
            if (str_satuanBaru.equals("")) pesanPopUp("Satuan baru kosong ! \nUbah satuan dibatalkan.");
            else if (str_konversiS.equals("")) pesanPopUp("Nilai konversi satuan kosong ! \nUbah satuan dibatalkan");
            else { 
               try { 
                    String sql = "UPDATE templat SET satuan_tp = ?, konversi_tp = ? WHERE satuan_tp = ?";
                    PreparedStatement prep = conn.prepareStatement(sql);
                    prep.setString(1, str_satuanBaru);
                    prep.setString(2, str_konversiS);
                    prep.setString(3, str_satuanLama);
                    prep.executeUpdate();
                } catch (SQLException e){
                    pesanSQLPopUp("Gagal mengubah kategori",e);
                }
                dapatkanSatuan();
                tabelTemplat();
            }
        }
    }//GEN-LAST:event_btn_ubah_satuanActionPerformed

    private void tf_jumlah_beliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_jumlah_beliKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_tf_jumlah_beliKeyTyped

    private void tf_jumlah_beliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_jumlah_beliKeyReleased
        dapatkanJmlBeli();
    }//GEN-LAST:event_tf_jumlah_beliKeyReleased

    private void dapatkanJmlBeli(){
        String str_jmlBeli = tf_jumlah_beli.getText();        
        if (!str_jmlBeli.equals("")){
            int jml_beli = Integer.valueOf(str_jmlBeli);
            String satu_jb = (jml_beli/nilai_konversi)+"";
            lb_satuan_beli.setText(satu_jb);
            tf_satuan_jual.setText(satu_jb);
            lb_jumlah_jual.setText(jml_beli+"");
        }
    }
    
    private void tf_satuan_jualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_satuan_jualKeyTyped
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_tf_satuan_jualKeyTyped

    private void tf_satuan_jualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_satuan_jualKeyReleased
        String str_satuanJual = tf_satuan_jual.getText();
        if (!str_satuanJual.equals("")){
            int satuan_jual = Integer.valueOf(str_satuanJual);
            String jml_jual = (satuan_jual*nilai_konversi)+"";
            lb_jumlah_jual.setText(jml_jual);
        }
    }//GEN-LAST:event_tf_satuan_jualKeyReleased

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        String nama = tf_nama.getText();
        if (nama.equals("")) pesanPopUp("Nama Kosong !. \nIsi terlebih dahulu.");
        else if (adaNama(nama)) pesanPopUp("Nama Sudah Ada !");
        else {
            String kategori = cb_kategori.getSelectedItem().toString();
            String satuan = cb_satuan.getSelectedItem().toString();
            String status = rb_aktif.isSelected() ? "Aktif" : "Nonaktif";
            String query = "INSERT INTO templat VALUES (?,?,?,?,?,?,?,?)";        
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, lb_id_templat.getText());
                stat.setString(2, kategori);
                stat.setString(3, tf_nama.getText());
                stat.setString(4, satuan);
                stat.setInt(5, nilai_konversi);
                stat.setString(6, tf_jumlah_beli.getText());
                stat.setString(7, lb_jumlah_jual.getText());
                stat.setString(8, status);

                stat.executeUpdate();
                bersihkanMasukan();            
                tabelTemplat();
            } catch (SQLException e) {
                pesanSQLPopUp("Data tidak bisa disimpan",e);
            }
        }                   
    }//GEN-LAST:event_btn_simpanActionPerformed

    private boolean adaNama(String pnama){
        String sql = "SELECT nama_tp FROM templat WHERE nama_tp = '"+pnama+"'";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if (hasil.next()) return true; 
        } catch (SQLException e) {
            pesanSQLPopUp("Gagal cek nama",e);
        }
        return false;
    }    
    
    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
        String nama = tf_nama.getText();
        if (nama.equals("")) pesanPopUp("Nama Kosong !. \nIsi terlebih dahulu.");
        else if (adaNama(nama)) pesanPopUp("Nama Sudah Ada !");
        else {
            String kategori = cb_kategori.getSelectedItem().toString();
            String satuan = cb_satuan.getSelectedItem().toString();
            String status = rb_aktif.isSelected() ? "Aktif" : "Nonaktif";
            String query = "UPDATE templat SET id_tp=?, kategori_tp=?, nama_tp=?, satuan_tp=?, konversi_tp=?,"
                         + " harga_beli_tp=?, harga_jual_tp=?, status_tp=? WHERE id_tp=?";        
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setString(1, lb_id_templat.getText());
                stat.setString(2, kategori);
                stat.setString(3, tf_nama.getText());
                stat.setString(4, satuan);
                stat.setInt(5, nilai_konversi);
                stat.setString(6, tf_jumlah_beli.getText());
                stat.setString(7, lb_jumlah_jual.getText());
                stat.setString(8, status);
                stat.setString(9, id_pilihan);

                stat.executeUpdate();
                bersihkanMasukan();
                dapatkanKategori();            
                tabelTemplat();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data Gagal Diubah "+e);
            }
        }
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void bersihkanMasukan(){
        tf_nama.setText("");
        tf_jumlah_beli.setText("0");
        lb_satuan_beli.setText("0");
        tf_satuan_jual.setText("0");
        lb_jumlah_jual.setText("0");
    }
    
    private void tbl_templatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_templatMouseClicked
        int bar = tbl_templat.getSelectedRow();
        this.id_pilihan = tabmode.getValueAt(bar, 0).toString();        
        String sql = "SELECT * FROM templat WHERE id_tp = '"+id_pilihan+"'";        
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);  
            if (hasil.next()){
                String kategori = hasil.getString("kategori_tp");
                String nama = hasil.getString("nama_tp");
                String satuan = hasil.getString("satuan_tp");
                String status = hasil.getString("status_tp");
                int konversi = hasil.getInt("konversi_tp");
                int jml_beli = hasil.getInt("harga_beli_tp");
                int jml_jual = hasil.getInt("harga_jual_tp");
                
                cb_kategori.setSelectedItem(kategori);
                lb_id_templat.setText(id_pilihan);
                tf_nama.setText(nama);
                cb_satuan.setSelectedItem(satuan);
                this.nilai_konversi = konversi;
                tf_jumlah_beli.setText(""+jml_beli);
                lb_satuan_beli.setText(""+(jml_beli / konversi));
                lb_jumlah_jual.setText(""+jml_jual);
                tf_satuan_jual.setText(""+(jml_jual / konversi));
                switch (status) {
                    case "Aktif":
                        rb_aktif.setSelected(true);
                        rb_nonaktif.setSelected(false);
                        break;
                    case "Nonaktif":
                        rb_aktif.setSelected(false);
                        rb_nonaktif.setSelected(true);
                        break;
                    default:
                        rb_aktif.setSelected(false);
                        rb_nonaktif.setSelected(false);
                        break;
                }            
            }
        } catch (SQLException e){
            pesanSQLPopUp("Gagal mengambil data",e);
        }
    }//GEN-LAST:event_tbl_templatMouseClicked

    private void btn_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kembaliActionPerformed
        Rectangle bound = this.getBounds();
        new Pembelian(bound).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_kembaliActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        String id = lb_id_templat.getText();
        int ok = JOptionPane.showConfirmDialog(null,"Hapus","Konfirmasi Dialog", JOptionPane.YES_NO_OPTION);
        if (ok==0){
            String sql = "DELETE FROM templat WHERE id_tp='"+id+"'";
            try {
                PreparedStatement stat = conn.prepareStatement(sql);
                stat.executeUpdate();
                bersihkanMasukan();                
                tabelTemplat();                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data gagal dihapus"+e);
            }
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bersihkanActionPerformed
        bersihkanMasukan();
    }//GEN-LAST:event_btn_bersihkanActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Templat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Templat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Templat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Templat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Templat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private utility.bg2 bg21;
    private javax.swing.JButton btn_bersihkan;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_kembali;
    private javax.swing.JButton btn_plus_kategori;
    private javax.swing.JButton btn_plus_satuan;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_ubah;
    private javax.swing.JButton btn_ubah_kategori;
    private javax.swing.JButton btn_ubah_satuan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_kategori;
    private javax.swing.JComboBox<String> cb_satuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lb_id_templat;
    private javax.swing.JLabel lb_jumlah_jual;
    private javax.swing.JLabel lb_satuan_beli;
    private javax.swing.JRadioButton rb_aktif;
    private javax.swing.JRadioButton rb_nonaktif;
    private javax.swing.JTable tbl_templat;
    private javax.swing.JTextField tf_jumlah_beli;
    private javax.swing.JTextField tf_nama;
    private javax.swing.JTextField tf_satuan_jual;
    // End of variables declaration//GEN-END:variables
}
